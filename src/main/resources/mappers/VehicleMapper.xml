<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.vehicle_networking.mapper.VehicleMapper" >
  <resultMap id="BaseResultMap" type="com.example.vehicle_networking.entity.Vehicle" >
    <id column="vehicle_id" property="vehicleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="license_plate_number" property="licensePlateNumber" jdbcType="VARCHAR" />
    <result column="mileage" property="mileage" jdbcType="DOUBLE" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="running_state" property="runningState" jdbcType="INTEGER" />
    <result column="locked_state" property="lockedState" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List">
    vehicle_id, user_id, license_plate_number, mileage, category_id, create_time,running_state,locked_state
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from vehicle
    where vehicle_id = #{vehicleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.vehicle_networking.entity.Vehicle" >
    insert into vehicle (vehicle_id, user_id, license_plate_number, 
      mileage, category_id, create_time,running_state,locked_state
      )
    values (#{vehicleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{licensePlateNumber,jdbcType=VARCHAR}, 
      #{mileage,jdbcType=DOUBLE}, #{categoryId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},#{runningState,jdbcType=INTEGER},
      #{lockedState,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.vehicle_networking.entity.Vehicle" >
    update vehicle
    set user_id = #{userId,jdbcType=INTEGER},
      license_plate_number = #{licensePlateNumber,jdbcType=VARCHAR},
      mileage = #{mileage,jdbcType=DOUBLE},
      category_id = #{categoryId,jdbcType=INTEGER},
      running_state = #{runningState,jdbcType=INTEGER},
      locked_state = #{lockedState,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where vehicle_id = #{vehicleId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select vehicle_id, user_id, license_plate_number, mileage, category_id, create_time, running_state, locked_state
    from vehicle
    where vehicle_id = #{vehicleId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select vehicle_id, user_id, license_plate_number, mileage, category_id, create_time, running_state, locked_state
    from vehicle
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select vehicle_id, user_id, license_plate_number, mileage, category_id, create_time, running_state, locked_state
    from vehicle
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="fuzzyQuery" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from vehicle
    <where>
      <if test="categoryId != null"> and category_id = #{categoryId,jdbcType=INTEGER}</if>
      <if test="userId != null"> and user_id = #{userId,jdbcType=INTEGER}</if>
      <if test="licenseNumber != null"> and license_plate_number like ('%' #{licenseNumber,jdbcType=VARCHAR} '%')</if>
    </where>
  </select>
</mapper>